{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/react-224r31/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport FlashCardList from \"./components/FlashCardList\";\nimport \"./style.css\";\nimport 'axios';\nimport axios from \"axios\";\nimport { FaGithubAlt } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [flashCards, setFlashCards] = useState([]);\n  const [category, setCategory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [helperText, setHelperText] = useState(true);\n  const categoryEl = useRef();\n  const numberEl = useRef();\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php').then(res => {\n      setCategory(res.data.trivia_categories);\n    });\n  }, []);\n  /*useEffect( () => {\n    setLoading(true)\n    axios.get('https://opentdb.com/api.php?amount=10')\n    .then( res => {\n      setFlashCards( res.data.results.map((questionItem, index) => {\n        const answer = questionItem.correct_answer\n        const options = [...questionItem.incorrect_answers.map(a => decodeStr(a)), answer]\n        return{\n          id:`${index}-${Date.now()}`,\n          question:decodeStr( questionItem.question),\n          answer: decodeStr( answer ),\n          options:options.sort(()=> Math.random() - .5)\n      \n        }\n      })\n      )\n      setLoading(false)\n    })\n  },[])*/\n\n  function decodeStr(str) {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: numberEl.current.value,\n        category: categoryEl.current.value\n      }\n    }).then(res => {\n      setFlashCards(res.data.results.map((questionItem, index) => {\n        const answer = questionItem.correct_answer;\n        const options = [...questionItem.incorrect_answers.map(a => decodeStr(a)), answer];\n        return {\n          id: `${index}-${Date.now()}`,\n          question: decodeStr(questionItem.question),\n          answer: decodeStr(answer),\n          options: options.sort(() => Math.random() - .5)\n        };\n      }));\n      setLoading(false);\n      setHelperText(false);\n    });\n  }\n\n  const LOCAL_STORAGE_KEY = 'flashCards.Quiz';\n  useEffect(() => {\n    const getFlashCards = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (getFlashCards) return setFlashCards(getFlashCards);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(flashCards));\n    setHelperText(false);\n  }, [flashCards]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"header\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"category\",\n          ref: categoryEl,\n          children: category.map(c => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c.id,\n              children: c.name\n            }, c.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"number\",\n          children: \"Number of Ouestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"number\",\n          min: \"1\",\n          step: \"1\",\n          min: 1,\n          defaultValue: 10,\n          ref: numberEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Generate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [helperText ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"helperText\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"'Select Category and number of questions and Tap Generate to view questions. \", /*#__PURE__*/_jsxDEV(\"b\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 115\n          }, this), \"For answer tap the question'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loading-cnt\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(FlashCardList, {\n        flashCards: flashCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Crafted with Passsion by Nishant Patil \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"github\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/pnishant23\",\n          children: /*#__PURE__*/_jsxDEV(FaGithubAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"p7781B3A82lK94zKA//UrnnynLc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/react-224r31/src/App.js"],"names":["React","useState","useEffect","useRef","FlashCardList","axios","FaGithubAlt","App","flashCards","setFlashCards","category","setCategory","loading","setLoading","helperText","setHelperText","categoryEl","numberEl","get","then","res","data","trivia_categories","decodeStr","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","params","amount","current","results","map","questionItem","index","answer","correct_answer","options","incorrect_answers","a","id","Date","now","question","sort","Math","random","LOCAL_STORAGE_KEY","getFlashCards","JSON","parse","localStorage","getItem","setItem","stringify","c","name"],"mappings":"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","sourcesContent":["import React, {useState,useEffect, useRef} from \"react\";\nimport FlashCardList from \"./components/FlashCardList\";\nimport \"./style.css\";\nimport 'axios'\nimport axios from \"axios\";\nimport { FaGithubAlt } from 'react-icons/fa'\n\nexport default function App() {\n\n  const [flashCards, setFlashCards] = useState([])\n\n  const [category, setCategory] = useState([])\n\n  const [loading, setLoading] = useState(false)\n\n  const [helperText, setHelperText] = useState(true)\n\n  const categoryEl = useRef()\n  const numberEl = useRef()\n\n  useEffect(()=>{\n    axios.get('https://opentdb.com/api_category.php')\n    .then(res => {\n      setCategory(res.data.trivia_categories)\n    })\n  },[])\n  \n  /*useEffect( () => {\n    setLoading(true)\n    axios.get('https://opentdb.com/api.php?amount=10')\n    .then( res => {\n      setFlashCards( res.data.results.map((questionItem, index) => {\n        const answer = questionItem.correct_answer\n        const options = [...questionItem.incorrect_answers.map(a => decodeStr(a)), answer]\n        return{\n          id:`${index}-${Date.now()}`,\n          question:decodeStr( questionItem.question),\n          answer: decodeStr( answer ),\n          options:options.sort(()=> Math.random() - .5)\n      \n        }\n      })\n      )\n      setLoading(false)\n    })\n  },[])*/\n\n  function decodeStr( str ){\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handleSubmit(e){\n    e.preventDefault()\n    setLoading(true)\n    axios.get('https://opentdb.com/api.php', {\n      params:{\n        amount:numberEl.current.value,\n        category:categoryEl.current.value\n      }\n    })\n    .then( res => {\n      setFlashCards( res.data.results.map((questionItem, index) => {\n        const answer = questionItem.correct_answer\n        const options = [...questionItem.incorrect_answers.map(a => decodeStr(a)), answer]\n        return{\n          id:`${index}-${Date.now()}`,\n          question:decodeStr( questionItem.question),\n          answer: decodeStr( answer ),\n          options:options.sort(()=> Math.random() - .5)\n        }\n      })\n      )\n      setLoading(false)\n      setHelperText(false)\n    })\n\n  }\n\n  const LOCAL_STORAGE_KEY = 'flashCards.Quiz'\n\n\n  useEffect(()=>{\n    const getFlashCards = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n\n    if (getFlashCards) return setFlashCards(getFlashCards) \n  },[])\n\n  useEffect(()=>{\n    localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(flashCards))\n    setHelperText(false)\n  },[flashCards])\n\n  return (\n    <>\n    <form className='header' onSubmit={handleSubmit}>\n      <div className='form-group'>\n        <label htmlFor='category'>category</label>\n        <select id='category' ref={categoryEl}>\n          {category.map(c => {\n            return <option value={c.id} key={c.id}>{c.name}</option>\n          })}\n        </select>\n      </div>\n      <div className='form-group'>\n        <label htmlFor='number'>Number of Ouestions</label>\n        <input type='number' id='number' min='1' step='1' min={1} defaultValue={10} ref={numberEl}/>\n      </div>\n      <div className='form-group'>\n        <button className='btn'>Generate</button>\n      </div>\n    </form>\n\n    <div className='container'>\n      { helperText ?\n      <div className='helperText'><p>'Select Category and number of questions and Tap Generate to view questions. <b/>For answer tap the question'</p></div> : null}\n\n      {loading ? <h1 className='loading-cnt'><div className='loading'></div></h1> :\n    <FlashCardList flashCards={flashCards }/>}\n    </div>\n    \n    <footer  className='footer'>\n      <p>Crafted with Passsion by Nishant Patil </p>\n      <span id='github'><a href='https://github.com/pnishant23'><FaGithubAlt/></a>\n      </span>\n    </footer>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}