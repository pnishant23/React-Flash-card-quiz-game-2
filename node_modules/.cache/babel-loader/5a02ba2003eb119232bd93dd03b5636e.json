{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/react-224r31/src/components/FlashCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FlashCard({\n  FlashCardItem\n}) {\n  _s();\n\n  const [flip, setFlip] = useState(false);\n  const [height, setHeight] = useState('initial');\n  const frontEl = useRef();\n  const backEl = useRef();\n\n  function setMaxHeight() {\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\n    const backHeight = backEl.current.getBoundingClientRect().height;\n    setHeight(Math.max(frontHeight, backHeight, 100));\n  }\n\n  useEffect(() => {\n    setMaxHeight();\n  }, [FlashCardItem.answer, FlashCardItem.question, FlashCardItem.options]);\n  useEffect(() => {\n    window.addEventListener('resize', setMaxHeight);\n    return () => window.removeEventListener('resize', setMaxHeight);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `card ${flip ? 'flip' : ''} `,\n      style: {\n        height: height\n      },\n      onClick: () => setFlip(!flip),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"front\",\n        ref: frontEl,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: \"category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), FlashCardItem.question, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: FlashCardItem.options.map(option => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option\",\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 18\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back\",\n        ref: backEl,\n        children: FlashCardItem.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(FlashCard, \"qfG400B5FHOE/tWxRI+kaoxtmzk=\");\n\n_c = FlashCard;\nexport default FlashCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlashCard\");","map":{"version":3,"sources":["/data/data/com.termux/files/home/react-224r31/src/components/FlashCard.js"],"names":["React","useState","useEffect","useRef","FlashCard","FlashCardItem","flip","setFlip","height","setHeight","frontEl","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","answer","question","options","window","addEventListener","removeEventListener","map","option"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAgD,OAAhD;;;;AAEA,SAASC,SAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAAoC;AAAA;;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,SAAD,CAApC;AAEA,QAAMS,OAAO,GAAGP,MAAM,EAAtB;AACA,QAAMQ,MAAM,GAAGR,MAAM,EAArB;;AAEA,WAASS,YAAT,GAAwB;AACtB,UAAMC,WAAW,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCP,MAA5D;AAEA,UAAMQ,UAAU,GAAGL,MAAM,CAACG,OAAP,CAAeC,qBAAf,GAAuCP,MAA1D;AAEAC,IAAAA,SAAS,CAACQ,IAAI,CAACC,GAAL,CAASL,WAAT,EAAsBG,UAAtB,EAAkC,GAAlC,CAAD,CAAT;AACD;;AAEDd,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,YAAY;AACb,GAFQ,EAEP,CAACP,aAAa,CAACc,MAAf,EAAuBd,aAAa,CAACe,QAArC,EAA+Cf,aAAa,CAACgB,OAA7D,CAFO,CAAT;AAIAnB,EAAAA,SAAS,CAAC,MAAI;AACZoB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCX,YAAlC;AACA,WAAO,MAAMU,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCZ,YAArC,CAAb;AACD,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAI,QAAON,IAAI,GAAG,MAAH,GAAY,EAAI,GAA7C;AACA,MAAA,KAAK,EAAE;AAACE,QAAAA,MAAM,EAACA;AAAR,OADP;AAEA,MAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAFtB;AAAA,8BAGA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEI,OAA5B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGL,aAAa,CAACe,QAFjB,eAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBACGf,aAAa,CAACgB,OAAd,CAAsBI,GAAtB,CAA0BC,MAAM,IAAI;AACnC,gCAAO;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,wBAAsCA;AAAtC,eAA6BA,MAA7B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAaA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEf,MAA3B;AAAA,kBAAoCN,aAAa,CAACc;AAAlD;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAoBD;;GA7CQf,S;;KAAAA,S;AA+CT,eAAeA,SAAf","sourcesContent":["import React,{useState, useEffect, useRef} from 'react'\n\nfunction FlashCard ({FlashCardItem}){\n  const [flip, setFlip] = useState(false)\n\n  const [height, setHeight] = useState('initial')\n\n  const frontEl = useRef()\n  const backEl = useRef()\n\n  function setMaxHeight (){\n    const frontHeight = frontEl.current.getBoundingClientRect().height\n\n    const backHeight = backEl.current.getBoundingClientRect().height\n    \n    setHeight(Math.max(frontHeight, backHeight, 100))\n  }\n\n  useEffect(()=>{\n    setMaxHeight()\n  },[FlashCardItem.answer, FlashCardItem.question, FlashCardItem.options])\n\n  useEffect(()=>{\n    window.addEventListener('resize', setMaxHeight)\n    return () => window.removeEventListener('resize', setMaxHeight)\n  },[])\n\n  return(\n    <>\n    <div className={ `card ${flip ? 'flip' : '' } ` } \n    style={{height:height}}\n    onClick={() => setFlip(!flip)}>\n    <div className='front' ref={frontEl}>\n      <div className='category'>category</div>\n      {FlashCardItem.question}\n      <div className='options'>\n        {FlashCardItem.options.map(option => {\n          return <div className='option' key={option}>{option}</div>\n        })}\n      </div>\n    </div>\n\n    <div className='back' ref={backEl}>{FlashCardItem.answer}</div>\n\n    </div>\n    </>\n  )\n}\n\nexport default FlashCard"]},"metadata":{},"sourceType":"module"}